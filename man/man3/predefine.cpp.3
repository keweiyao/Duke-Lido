.TH "src/predefine.cpp" 3 "Thu Jul 1 2021" "Duke-Lido" \" -*- nroff -*-
.ad l
.nh
.SH NAME
src/predefine.cpp
.SH SYNOPSIS
.br
.PP
\fC#include 'predefine\&.h'\fP
.br
\fC#include <cmath>\fP
.br
\fC#include <boost/math/tools/roots\&.hpp>\fP
.br
\fC#include 'simpleLogger\&.h'\fP
.br
\fC#include 'random\&.h'\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBinitialize_mD_and_scale\fP (int _mD_type, double _mu, double _afix, double _theta, double _cut)"
.br
.ti -1c
.RI "double \fBpid2mass\fP (int pid)"
.br
.ti -1c
.RI "void \fBecho\fP (void)"
.br
.ti -1c
.RI "double \fBP_q2qg\fP (double x)"
.br
.ti -1c
.RI "double \fBP_q2gq\fP (double x)"
.br
.ti -1c
.RI "double \fBP_g2gg\fP (double x)"
.br
.ti -1c
.RI "double \fBP_g2qqbar\fP (double x)"
.br
.ti -1c
.RI "void \fBformation_time\fP (double &tauf, double &Q2, int idA, int idB, int idC, \fBfourvec\fP pA, \fBfourvec\fP pB, \fBfourvec\fP pC, double T, \fBfourvec\fP p0)"
.br
.ti -1c
.RI "double \fBalpha_s\fP (double Q2, double T)"
.br
.ti -1c
.RI "bool \fBis_file_exist\fP (std::string fileName)"
.br
.ti -1c
.RI "\fBfourvec\fP \fBput_on_shell\fP (\fBfourvec\fP p, int pid)"
.br
.ti -1c
.RI "\fBparticle\fP \fBmake_parton\fP (int pid, int col, int acol, double \fBscale\fP, \fBfourvec\fP pmu, \fBparticle\fP &mother, double T, std::vector< double > vcell)"
.br
.ti -1c
.RI "\fBparticle\fP \fBmake_parton\fP (int pid, int col, int acol, double \fBscale\fP, \fBfourvec\fP pmu, \fBcoordinate\fP x)"
.br
.ti -1c
.RI "bool \fBis1to2\fP (int prcid)"
.br
.ti -1c
.RI "bool \fBis2to2\fP (int prcid)"
.br
.ti -1c
.RI "bool \fBis2to2_nlo\fP (int prcid)"
.br
.ti -1c
.RI "bool \fBis_classical\fP (int prcid)"
.br
.ti -1c
.RI "bool \fBis2to3\fP (int prcid)"
.br
.ti -1c
.RI "bool \fBisPairProduction\fP (int prcid)"
.br
.ti -1c
.RI "int \fBget_process_info\fP (std::string p, std::vector< double > &_IM, std::vector< double > &_FM, std::vector< int > &_IT, std::vector< int > &_FT)"
.br
.ti -1c
.RI "void \fBassign_1to2_pid\fP (int process_id, int incoming_hard_id, std::vector< int > &pids)"
.br
.ti -1c
.RI "void \fBassign_2to2_pid\fP (int process_id, int incoming_hard_id, std::vector< int > &pids)"
.br
.ti -1c
.RI "void \fBassign_2to3_pid\fP (int process_id, int incoming_hard_id, std::vector< int > &pids, bool forward)"
.br
.ti -1c
.RI "void \fBassign_2to2_color\fP (int process_id, int pidA, int pid1, int pid2, int Ca, int aCa, int &C1, int &aC1, int &C2, int &aC2)"
.br
.ti -1c
.RI "void \fBassign_n2np1_color\fP (int pidA, int pid1, int pid2, int Ca, int aCa, int &C1, int &aC1, int &C2, int &aC2)"
.br
.ti -1c
.RI "void \fBassign_2to2_nlo_color\fP (int process_id, int pidA, int pid1, int pid2, int pid3, int Ca, int aCa, int &C1, int &aC1, int &C2, int &aC2, int &C3, int &aC3)"
.br
.ti -1c
.RI "void \fBoutput_oscar\fP (const std::vector< \fBparticle\fP > plist, int abspid, std::string fname)"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "char \fBHS2PP\fP [] = 'HS2PP'"
.br
.ti -1c
.RI "char \fBHS2PPP\fP [] = 'HS2PPP'"
.br
.ti -1c
.RI "char \fBHSS2PP\fP [] = 'HSS2PP'"
.br
.ti -1c
.RI "bool \fBtype1_warned\fP = false"
.br
.ti -1c
.RI "bool \fBtype2_warned\fP = false"
.br
.ti -1c
.RI "bool \fBtype3_warned\fP = false"
.br
.ti -1c
.RI "const double \fBc2pi\fP = 2\&.*M_PI"
.br
.ti -1c
.RI "const double \fBc4d9\fP = 4\&./9\&."
.br
.ti -1c
.RI "const double \fBc1d9\fP = 1\&./9\&."
.br
.ti -1c
.RI "const double \fBc8pi\fP = 8\&.*M_PI"
.br
.ti -1c
.RI "const double \fBc16pi\fP = 16\&.*M_PI"
.br
.ti -1c
.RI "const double \fBc48pi\fP = 48\&.*M_PI"
.br
.ti -1c
.RI "const double \fBc16pi2\fP = 16\&.*M_PI*M_PI"
.br
.ti -1c
.RI "const double \fBc72pi2\fP = 72\&.*M_PI*M_PI"
.br
.ti -1c
.RI "const double \fBc32pi3\fP = 32\&.*M_PI*M_PI*M_PI"
.br
.ti -1c
.RI "const double \fBc64d9pi2\fP = 64\&./9\&.*M_PI*M_PI"
.br
.ti -1c
.RI "const double \fBc256pi4\fP = 256\&.*std::pow(M_PI, 4)"
.br
.ti -1c
.RI "const double \fBfmc_to_GeV_m1\fP = 5\&.076"
.br
.ti -1c
.RI "int \fBcolor_count\fP = \-1"
.br
.ti -1c
.RI "const int \fBNc\fP = 3"
.br
.ti -1c
.RI "const int \fBnf\fP = 3"
.br
.ti -1c
.RI "const double \fBCF\fP = 4\&./3\&."
.br
.ti -1c
.RI "const double \fBCA\fP = 3\&."
.br
.ti -1c
.RI "const double \fBCF_over_CA\fP = \fBCF\fP/\fBCA\fP"
.br
.ti -1c
.RI "const double \fBTR\fP = 0\&.5"
.br
.ti -1c
.RI "const double \fBMc\fP = 1\&.3"
.br
.ti -1c
.RI "const double \fBMb\fP = 4\&.2"
.br
.ti -1c
.RI "const double \fBpf_g\fP = 8\&./M_PI*(\fBNc\fP + \fBnf\fP)"
.br
.ti -1c
.RI "const double \fBalpha0\fP = 4\&.*M_PI/(11\&./3\&.*\fBNc\fP \- 2\&./3\&.*\fBnf\fP)"
.br
.ti -1c
.RI "const double \fBalpha_max\fP = 1\&.0"
.br
.ti -1c
.RI "const double \fBLambda\fP = 0\&.2"
.br
.ti -1c
.RI "const double \fBLambda2\fP = \fBLambda\fP*\fBLambda\fP"
.br
.ti -1c
.RI "const double \fBmu2_NP\fP = \fBLambda2\fP*std::exp(\fBalpha0\fP/\fBalpha_max\fP)"
.br
.ti -1c
.RI "double \fBcut\fP"
.br
.ti -1c
.RI "double \fBscale\fP"
.br
.ti -1c
.RI "double \fBafix\fP"
.br
.ti -1c
.RI "double \fBLido_Ecut\fP"
.br
.ti -1c
.RI "\fBDebye_mass\fP * \fBt_channel_mD2\fP"
.br
.ti -1c
.RI "const double \fBLPM_prefactor\fP = 2\&.2"
.br
.ti -1c
.RI "int \fBtime_type\fP"
.br
.ti -1c
.RI "bool \fBAdiabatic_LPM\fP"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "double alpha_s (double Q2, double T)"

.SS "void assign_1to2_pid (int process_id, int incoming_hard_id, std::vector< int > & pids)"

.SS "void assign_2to2_color (int process_id, int pidA, int pid1, int pid2, int Ca, int aCa, int & C1, int & aC1, int & C2, int & aC2)"

.SS "void assign_2to2_nlo_color (int process_id, int pidA, int pid1, int pid2, int pid3, int Ca, int aCa, int & C1, int & aC1, int & C2, int & aC2, int & C3, int & aC3)"

.SS "void assign_2to2_pid (int process_id, int incoming_hard_id, std::vector< int > & pids)"

.SS "void assign_2to3_pid (int process_id, int incoming_hard_id, std::vector< int > & pids, bool forward)"

.SS "void assign_n2np1_color (int pidA, int pid1, int pid2, int Ca, int aCa, int & C1, int & aC1, int & C2, int & aC2)"

.SS "void echo (void)"

.SS "void formation_time (double & tauf, double & Q2, int idA, int idB, int idC, \fBfourvec\fP pA, \fBfourvec\fP pB, \fBfourvec\fP pC, double T, \fBfourvec\fP p0)"

.SS "int get_process_info (std::string p, std::vector< double > & _IM, std::vector< double > & _FM, std::vector< int > & _IT, std::vector< int > & _FT)"

.SS "void initialize_mD_and_scale (int _mD_type, double _mu, double _afix, double _theta, double _cut)"

.SS "bool is1to2 (int prcid)"

.SS "bool is2to2 (int prcid)"

.SS "bool is2to2_nlo (int prcid)"

.SS "bool is2to3 (int prcid)"

.SS "bool is_classical (int prcid)"

.SS "bool is_file_exist (std::string fileName)"

.SS "bool isPairProduction (int prcid)"

.SS "\fBparticle\fP make_parton (int pid, int col, int acol, double scale, \fBfourvec\fP pmu, \fBcoordinate\fP x)"

.SS "\fBparticle\fP make_parton (int pid, int col, int acol, double scale, \fBfourvec\fP pmu, \fBparticle\fP & mother, double T, std::vector< double > vcell)"

.SS "void output_oscar (const std::vector< \fBparticle\fP > plist, int abspid, std::string fname)"

.SS "double P_g2gg (double x)"

.SS "double P_g2qqbar (double x)"

.SS "double P_q2gq (double x)"

.SS "double P_q2qg (double x)"

.SS "double pid2mass (int pid)"

.SS "\fBfourvec\fP put_on_shell (\fBfourvec\fP p, int pid)"

.SH "Variable Documentation"
.PP 
.SS "bool Adiabatic_LPM"

.SS "double afix"

.SS "const double alpha0 = 4\&.*M_PI/(11\&./3\&.*\fBNc\fP \- 2\&./3\&.*\fBnf\fP)"

.SS "const double alpha_max = 1\&.0"

.SS "const double c16pi = 16\&.*M_PI"

.SS "const double c16pi2 = 16\&.*M_PI*M_PI"

.SS "const double c1d9 = 1\&./9\&."

.SS "const double c256pi4 = 256\&.*std::pow(M_PI, 4)"

.SS "const double c2pi = 2\&.*M_PI"

.SS "const double c32pi3 = 32\&.*M_PI*M_PI*M_PI"

.SS "const double c48pi = 48\&.*M_PI"

.SS "const double c4d9 = 4\&./9\&."

.SS "const double c64d9pi2 = 64\&./9\&.*M_PI*M_PI"

.SS "const double c72pi2 = 72\&.*M_PI*M_PI"

.SS "const double c8pi = 8\&.*M_PI"

.SS "const double CA = 3\&."

.SS "const double CF = 4\&./3\&."

.SS "const double CF_over_CA = \fBCF\fP/\fBCA\fP"

.SS "int color_count = \-1"

.SS "double cut"

.SS "const double fmc_to_GeV_m1 = 5\&.076"

.SS "char HS2PP[] = 'HS2PP'"

.SS "char HS2PPP[] = 'HS2PPP'"

.SS "char HSS2PP[] = 'HSS2PP'"

.SS "const double Lambda = 0\&.2"

.SS "const double Lambda2 = \fBLambda\fP*\fBLambda\fP"

.SS "double Lido_Ecut"

.SS "const double LPM_prefactor = 2\&.2"

.SS "const double Mb = 4\&.2"

.SS "const double Mc = 1\&.3"

.SS "const double mu2_NP = \fBLambda2\fP*std::exp(\fBalpha0\fP/\fBalpha_max\fP)"

.SS "const int Nc = 3"

.SS "const int nf = 3"

.SS "const double pf_g = 8\&./M_PI*(\fBNc\fP + \fBnf\fP)"

.SS "double scale"

.SS "\fBDebye_mass\fP* t_channel_mD2"

.SS "int time_type"

.SS "const double TR = 0\&.5"

.SS "bool type1_warned = false"

.SS "bool type2_warned = false"

.SS "bool type3_warned = false"

.SH "Author"
.PP 
Generated automatically by Doxygen for Duke-Lido from the source code\&.
