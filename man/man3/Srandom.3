.TH "Srandom" 3 "Thu Jul 1 2021" "Duke-Lido" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Srandom
.SH SYNOPSIS
.br
.PP
.SS "Functions"

.in +1c
.ti -1c
.RI "int \fBgetEnvSeed\fP ()"
.br
.ti -1c
.RI "std::mt19937 \fBgen\fP ((\fBgetEnvSeed\fP()< 0) ? std::random_device{}() :\fBgetEnvSeed\fP())"
.br
.ti -1c
.RI "std::uniform_real_distribution< double > \fBsqrtZ\fP (std::sqrt(1\&./\fBAMC\fP), std::sqrt(\fBAMC\fP))"
.br
.ti -1c
.RI "std::uniform_real_distribution< double > \fBrejection\fP (0\&.0, 1\&.0)"
.br
.ti -1c
.RI "std::uniform_real_distribution< double > \fBinit_dis\fP (0\&.0, 1\&.0)"
.br
.ti -1c
.RI "std::uniform_real_distribution< double > \fBdist_phi\fP (0\&.0, 2\&.0 *M_PI)"
.br
.ti -1c
.RI "std::uniform_real_distribution< double > \fBdist_costheta\fP (\-1\&.0, 1\&.0)"
.br
.ti -1c
.RI "std::gamma_distribution< double > \fBsample_E_over_T\fP (3\&.0, 1\&.0)"
.br
.ti -1c
.RI "std::gamma_distribution< double > \fBexp_dist\fP (1\&.0, 1\&.0)"
.br
.ti -1c
.RI "std::normal_distribution< double > \fBwhite_noise\fP (0\&.0, 1\&.0)"
.br
.ti -1c
.RI "int \fBsample_flavor\fP (int Nf)"
.br
.ti -1c
.RI "bool \fBbinary_choice\fP ()"
.br
.ti -1c
.RI "\fBfourvec\fP \fBgenerate_thermal_parton_with_boost\fP (double T, double vx, double vy, double vz)"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "const double \fBAMC\fP = 4\&.0"
.br
.ti -1c
.RI "std::mt19937 \fBgen\fP"
.br
.ti -1c
.RI "std::uniform_real_distribution< double > \fBsqrtZ\fP"
.br
.ti -1c
.RI "std::uniform_real_distribution< double > \fBrejection\fP"
.br
.ti -1c
.RI "std::uniform_real_distribution< double > \fBinit_dis\fP"
.br
.ti -1c
.RI "std::uniform_real_distribution< double > \fBdist_phi\fP"
.br
.ti -1c
.RI "std::uniform_real_distribution< double > \fBdist_costheta\fP"
.br
.ti -1c
.RI "std::normal_distribution< double > \fBwhite_noise\fP"
.br
.ti -1c
.RI "std::gamma_distribution< double > \fBsample_E_over_T\fP"
.br
.ti -1c
.RI "std::gamma_distribution< double > \fBexp_dist\fP"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "bool Srandom::binary_choice ()"

.SS "std::uniform_real_distribution<double> Srandom::dist_costheta (\-1\&. 0, 1\&. 0)"

.SS "std::uniform_real_distribution<double> Srandom::dist_phi (0\&. 0, 2\&.0 * M_PI)"

.SS "std::gamma_distribution<double> Srandom::exp_dist (1\&. 0, 1\&. 0)"

.SS "std::mt19937 Srandom::gen ((\fBgetEnvSeed\fP()< 0) ? std::random_device{}() :\fBgetEnvSeed\fP())"

.SS "\fBfourvec\fP Srandom::generate_thermal_parton_with_boost (double T, double vx, double vy, double vz)"

.SS "int Srandom::getEnvSeed ()"

.SS "std::uniform_real_distribution<double> Srandom::init_dis (0\&. 0, 1\&. 0)"

.SS "std::uniform_real_distribution<double> Srandom::rejection (0\&. 0, 1\&. 0)"

.SS "std::gamma_distribution<double> Srandom::sample_E_over_T (3\&. 0, 1\&. 0)"

.SS "int Srandom::sample_flavor (int Nf)"

.SS "std::uniform_real_distribution<double> Srandom::sqrtZ (std::sqrt(1\&./\fBAMC\fP), std::sqrt(\fBAMC\fP))"

.SS "std::normal_distribution<double> Srandom::white_noise (0\&. 0, 1\&. 0)"

.SH "Variable Documentation"
.PP 
.SS "const double Srandom::AMC = 4\&.0"

.SS "std::uniform_real_distribution<double> Srandom::dist_costheta"

.SS "std::uniform_real_distribution<double> Srandom::dist_phi"

.SS "std::gamma_distribution<double> Srandom::exp_dist"

.SS "std::mt19937 Srandom::gen"

.SS "std::uniform_real_distribution<double> Srandom::init_dis"

.SS "std::uniform_real_distribution<double> Srandom::rejection"

.SS "std::gamma_distribution<double> Srandom::sample_E_over_T"

.SS "std::uniform_real_distribution<double> Srandom::sqrtZ"

.SS "std::normal_distribution<double> Srandom::white_noise"

.SH "Author"
.PP 
Generated automatically by Doxygen for Duke-Lido from the source code\&.
