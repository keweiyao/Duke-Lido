.TH "src/matrix_elements_2-2.cpp" 3 "Thu Jul 1 2021" "Duke-Lido" \" -*- nroff -*-
.ad l
.nh
.SH NAME
src/matrix_elements_2-2.cpp
.SH SYNOPSIS
.br
.PP
\fC#include <cmath>\fP
.br
\fC#include <iostream>\fP
.br
\fC#include 'predefine\&.h'\fP
.br
\fC#include 'matrix_elements\&.h'\fP
.br
\fC#include 'lorentz\&.h'\fP
.br
\fC#include 'simpleLogger\&.h'\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "double \fBM2_gg2gg\fP (const double t, void *params)"
.br
.ti -1c
.RI "double \fBdX_gg2gg\fP (const double t, void *params)"
.br
.ti -1c
.RI "double \fBM2_gq2gq\fP (const double t, void *params)"
.br
.RI "g(h)1 + q(s)2 --only 1/t^2 term--> g3 + q4 "
.ti -1c
.RI "double \fBdX_gq2gq\fP (const double t, void *params)"
.br
.ti -1c
.RI "double \fBM2_qq2qq\fP (const double t, void *params)"
.br
.RI "q(h)1 + q(s)2 --only-t--> q3 + q4, m1=m3, m2=m4=0 "
.ti -1c
.RI "double \fBdX_qq2qq\fP (const double t, void *params)"
.br
.ti -1c
.RI "double \fBM2_qg2qg\fP (const double t, void *params)"
.br
.RI "q(h)1 + g(s)2 --only-t--> q3 + g4, m1=m3, m2=m4=0 "
.ti -1c
.RI "double \fBdX_qg2qg\fP (const double t, void *params)"
.br
.ti -1c
.RI "double \fBM2_qg2qg_stu\fP (const double t, void *params)"
.br
.RI "q(h)1 + g(s)2 --s+u+t--> q3 + g4, m1=m3, m2=m4=0 "
.ti -1c
.RI "double \fBdX_qg2qg_stu\fP (const double t, void *params)"
.br
.ti -1c
.RI "double \fBM2_gg2qqbar\fP (const double t, void *params)"
.br
.ti -1c
.RI "double \fBdX_gg2qqbar\fP (const double t, void *params)"
.br
.ti -1c
.RI "double \fBM2_qqbar2qqbar_diff\fP (const double t, void *params)"
.br
.ti -1c
.RI "double \fBdX_qqbar2qqbar_diff\fP (const double t, void *params)"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "double dX_gg2gg (const double t, void * params)"

.SS "double dX_gg2qqbar (const double t, void * params)"

.SS "double dX_gq2gq (const double t, void * params)"

.SS "double dX_qg2qg (const double t, void * params)"

.SS "double dX_qg2qg_stu (const double t, void * params)"

.SS "double dX_qq2qq (const double t, void * params)"

.SS "double dX_qqbar2qqbar_diff (const double t, void * params)"

.SS "double M2_gg2gg (const double t, void * params)"

.SS "double M2_gg2qqbar (const double t, void * params)"

.SS "double M2_gq2gq (const double t, void * params)"

.PP
g(h)1 + q(s)2 --only 1/t^2 term--> g3 + q4 
.SS "double M2_qg2qg (const double t, void * params)"

.PP
q(h)1 + g(s)2 --only-t--> q3 + g4, m1=m3, m2=m4=0 
.SS "double M2_qg2qg_stu (const double t, void * params)"

.PP
q(h)1 + g(s)2 --s+u+t--> q3 + g4, m1=m3, m2=m4=0 
.SS "double M2_qq2qq (const double t, void * params)"

.PP
q(h)1 + q(s)2 --only-t--> q3 + q4, m1=m3, m2=m4=0 
.SS "double M2_qqbar2qqbar_diff (const double t, void * params)"

.SH "Author"
.PP 
Generated automatically by Doxygen for Duke-Lido from the source code\&.
