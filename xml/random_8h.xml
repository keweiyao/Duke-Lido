<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="random_8h" kind="file" language="C++">
    <compoundname>random.h</compoundname>
    <includes local="no">random</includes>
    <includes refid="lorentz_8h" local="yes">lorentz.h</includes>
    <includedby refid="collision__manager_8cpp" local="yes">src/collision_manager.cpp</includedby>
    <includedby refid="Hadronize_8cpp" local="yes">src/Hadronize.cpp</includedby>
    <includedby refid="Langevin_8cpp" local="yes">src/Langevin.cpp</includedby>
    <includedby refid="lido_8cpp" local="yes">src/lido.cpp</includedby>
    <includedby refid="Medium__Reader_8cpp" local="yes">src/Medium_Reader.cpp</includedby>
    <includedby refid="sampler_8h" local="yes">src/sampler.h</includedby>
    <includedby refid="predefine_8cpp" local="yes">src/predefine.cpp</includedby>
    <includedby refid="random_8cpp" local="yes">src/random.cpp</includedby>
    <includedby refid="Rate_8cpp" local="yes">src/Rate.cpp</includedby>
    <includedby refid="Xsection_8cpp" local="yes">src/Xsection.cpp</includedby>
    <incdepgraph>
      <node id="4">
        <label>cmath</label>
      </node>
      <node id="3">
        <label>lorentz.h</label>
        <link refid="lorentz_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/random.h</label>
        <link refid="random_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>random</label>
      </node>
      <node id="5">
        <label>cstdlib</label>
      </node>
      <node id="6">
        <label>iostream</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>src/minimizer.h</label>
        <link refid="minimizer_8h_source"/>
      </node>
      <node id="2">
        <label>src/sampler.h</label>
        <link refid="sampler_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/random.h</label>
        <link refid="random_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespaceSrandom">Srandom</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>RANDOM_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RANDOM_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;random&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;lorentz.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Srandom{</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getEnvSeed();</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>std::mt19937<sp/>gen;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>std::uniform_real_distribution&lt;double&gt;<sp/>sqrtZ;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>std::uniform_real_distribution&lt;double&gt;<sp/>rejection;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>std::uniform_real_distribution&lt;double&gt;<sp/>init_dis;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>std::uniform_real_distribution&lt;double&gt;<sp/>dist_phi;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>std::uniform_real_distribution&lt;double&gt;<sp/>dist_costheta;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>std::normal_distribution&lt;double&gt;<sp/>white_noise;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>std::gamma_distribution&lt;double&gt;<sp/>sample_E_over_T;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>std::gamma_distribution&lt;double&gt;<sp/>exp_dist;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sample_flavor(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Nf);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>binary_choice();</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><ref refid="structfourvec" kindref="compound">fourvec</ref><sp/>generate_thermal_parton_with_boost(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>vx,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>vy,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>vz);</highlight></codeline>
<codeline lineno="19"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="src/random.h"/>
  </compounddef>
</doxygen>
