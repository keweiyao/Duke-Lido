<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classEffRate12" kind="class" language="C++" prot="public">
    <compoundname>EffRate12</compoundname>
    <basecompoundref refid="classStochasticBase" prot="public" virt="virtual">StochasticBase&lt; N &gt;</basecompoundref>
    <templateparamlist>
      <param>
        <type>size_t</type>
        <declname>N</declname>
        <defname>N</defname>
      </param>
      <param>
        <type>typename F</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classEffRate12_1a875ee83db61bf23f9da7a17e1200e498" prot="private" static="no" mutable="no">
        <type>F</type>
        <definition>F EffRate12&lt; N, F &gt;::_f</definition>
        <argsstring></argsstring>
        <name>_f</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Rate.h" line="58" column="3" bodyfile="src/Rate.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classEffRate12_1a3eecba5dc6cfd14f9f5edd129c5189be" prot="private" static="no" mutable="no">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt;double&gt; EffRate12&lt; N, F &gt;::_IS_masses</definition>
        <argsstring></argsstring>
        <name>_IS_masses</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Rate.h" line="59" column="13" bodyfile="src/Rate.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classEffRate12_1a38d3c665bece3ba8fd5cc3624b500092" prot="private" static="no" mutable="no">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt;double&gt; EffRate12&lt; N, F &gt;::_FS_masses</definition>
        <argsstring></argsstring>
        <name>_FS_masses</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Rate.h" line="60" column="13" bodyfile="src/Rate.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classEffRate12_1ae61b9143012a01cfbe8c6af9a5630d59" prot="private" static="no" mutable="no">
        <type>std::vector&lt; int &gt;</type>
        <definition>std::vector&lt;int&gt; EffRate12&lt; N, F &gt;::_IS_types</definition>
        <argsstring></argsstring>
        <name>_IS_types</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Rate.h" line="61" column="13" bodyfile="src/Rate.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classEffRate12_1a4bbd42b35d2e9ae99ffd54528c7f8e02" prot="private" static="no" mutable="no">
        <type>std::vector&lt; int &gt;</type>
        <definition>std::vector&lt;int&gt; EffRate12&lt; N, F &gt;::_FS_types</definition>
        <argsstring></argsstring>
        <name>_FS_types</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Rate.h" line="62" column="13" bodyfile="src/Rate.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classEffRate12_1aee7203e8194e951ac8293b35d4b40097" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int EffRate12&lt; N, F &gt;::_process_id</definition>
        <argsstring></argsstring>
        <name>_process_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Rate.h" line="63" column="13" bodyfile="src/Rate.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classEffRate12_1ac85150f49cb2c560dc3ac98c0335d92f" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int EffRate12&lt; N, F &gt;::_degen</definition>
        <argsstring></argsstring>
        <name>_degen</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Rate.h" line="64" column="13" bodyfile="src/Rate.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classEffRate12_1a3feed9c9ea489b5cddc966fb423891b3" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool EffRate12&lt; N, F &gt;::_active</definition>
        <argsstring></argsstring>
        <name>_active</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Rate.h" line="65" column="6" bodyfile="src/Rate.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classEffRate12_1a2a8fcdc55208e1f3222863c8b6a4f0b9" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="structscalar" kindref="compound">scalar</ref></type>
        <definition>scalar EffRate12&lt; N, F &gt;::find_max</definition>
        <argsstring>(std::vector&lt; double &gt; parameters)</argsstring>
        <name>find_max</name>
        <reimplements refid="classStochasticBase_1afe214be3b5b4563948b852bde4a72863">find_max</reimplements>
        <param>
          <type>std::vector&lt; double &gt;</type>
          <declname>parameters</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Rate.h" line="54" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classEffRate12_1acb06ea529f95810ab76b52aece0bd6ac" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="structscalar" kindref="compound">scalar</ref></type>
        <definition>scalar EffRate12&lt; N, F &gt;::calculate_scalar</definition>
        <argsstring>(std::vector&lt; double &gt; parameters)</argsstring>
        <name>calculate_scalar</name>
        <reimplements refid="classStochasticBase_1ac1cebc3571cab064a218f273624724b4">calculate_scalar</reimplements>
        <param>
          <type>std::vector&lt; double &gt;</type>
          <declname>parameters</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Rate.h" line="55" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classEffRate12_1a033e070bb1076d555c227f6a9c97a395" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="structfourvec" kindref="compound">fourvec</ref></type>
        <definition>fourvec EffRate12&lt; N, F &gt;::calculate_fourvec</definition>
        <argsstring>(std::vector&lt; double &gt; parameters)</argsstring>
        <name>calculate_fourvec</name>
        <reimplements refid="classStochasticBase_1a0080ac8ebcb02d9dcf8e935c30a14e18">calculate_fourvec</reimplements>
        <param>
          <type>std::vector&lt; double &gt;</type>
          <declname>parameters</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Rate.h" line="56" column="9" bodyfile="src/Rate.cpp" bodystart="638" bodyend="640"/>
      </memberdef>
      <memberdef kind="function" id="classEffRate12_1a80ca2eff05b0408e8cf74c2e047816ea" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="structtensor" kindref="compound">tensor</ref></type>
        <definition>tensor EffRate12&lt; N, F &gt;::calculate_tensor</definition>
        <argsstring>(std::vector&lt; double &gt; parameters)</argsstring>
        <name>calculate_tensor</name>
        <reimplements refid="classStochasticBase_1a92d87bca06334a818ab9130866e348a4">calculate_tensor</reimplements>
        <param>
          <type>std::vector&lt; double &gt;</type>
          <declname>parameters</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Rate.h" line="57" column="8" bodyfile="src/Rate.cpp" bodystart="642" bodyend="644"/>
      </memberdef>
      <memberdef kind="function" id="classEffRate12_1a4d0a8bb0d3c0cda5c690eb3638fc3b4c" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="structscalar" kindref="compound">scalar</ref></type>
        <definition>scalar EffRate12&lt; 2, double(*)(const double *, void *)&gt;::find_max</definition>
        <argsstring>(std::vector&lt; double &gt; parameters)</argsstring>
        <name>find_max</name>
        <reimplements refid="classStochasticBase_1afe214be3b5b4563948b852bde4a72863">find_max</reimplements>
        <param>
          <type>std::vector&lt; double &gt;</type>
          <declname>parameters</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Rate.cpp" line="579" column="18" bodyfile="src/Rate.cpp" bodystart="580" bodyend="603"/>
      </memberdef>
      <memberdef kind="function" id="classEffRate12_1a31ca444f9b5df895228c95d0396b1e81" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="structscalar" kindref="compound">scalar</ref></type>
        <definition>scalar EffRate12&lt; 2, double(*)(const double *, void *)&gt;::calculate_scalar</definition>
        <argsstring>(std::vector&lt; double &gt; parameters)</argsstring>
        <name>calculate_scalar</name>
        <reimplements refid="classStochasticBase_1ac1cebc3571cab064a218f273624724b4">calculate_scalar</reimplements>
        <param>
          <type>std::vector&lt; double &gt;</type>
          <declname>parameters</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Rate.cpp" line="608" column="18" bodyfile="src/Rate.cpp" bodystart="609" bodyend="634"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classEffRate12_1a23a99ae0f76daa844306bd79694b1a01" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>EffRate12&lt; N, F &gt;::EffRate12</definition>
        <argsstring>(std::string Name, std::string configfile, F f)</argsstring>
        <name>EffRate12</name>
        <param>
          <type>std::string</type>
          <declname>Name</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>configfile</declname>
        </param>
        <param>
          <type>F</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Rate.h" line="67" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classEffRate12_1a3c26ba0fe3451827682279708e7b37d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool EffRate12&lt; N, F &gt;::sample</definition>
        <argsstring>(std::vector&lt; double &gt; arg, int incoming_hard_pid, std::vector&lt; fourvec &gt; &amp;FS, std::vector&lt; int &gt; &amp;pids)</argsstring>
        <name>sample</name>
        <reimplements refid="classStochasticBase_1a8f4f2a4dc9dae1bfa2005817d1689ae1">sample</reimplements>
        <param>
          <type>std::vector&lt; double &gt;</type>
          <declname>arg</declname>
        </param>
        <param>
          <type>int</type>
          <declname>incoming_hard_pid</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="structfourvec" kindref="compound">fourvec</ref> &gt; &amp;</type>
          <declname>FS</declname>
        </param>
        <param>
          <type>std::vector&lt; int &gt; &amp;</type>
          <declname>pids</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Rate.h" line="68" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classEffRate12_1a78d439dfda37ef7f89917ac8902f81d1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int EffRate12&lt; N, F &gt;::process_id</definition>
        <argsstring>(void)</argsstring>
        <name>process_id</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Rate.h" line="72" column="13" bodyfile="src/Rate.h" bodystart="72" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="classEffRate12_1a7fd87f4fe81aa8ab98031f36428d4b80" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool EffRate12&lt; N, F &gt;::IsActive</definition>
        <argsstring>(void)</argsstring>
        <name>IsActive</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Rate.h" line="73" column="6" bodyfile="src/Rate.h" bodystart="73" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="classEffRate12_1ad449687ff44df4843297720e66829c01" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>EffRate12&lt; 2, double(*)(const double *, void *)&gt;::EffRate12</definition>
        <argsstring>(std::string Name, std::string configfile, double(*f)(const double *, void *))</argsstring>
        <name>EffRate12</name>
        <param>
          <type>std::string</type>
          <declname>Name</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>configfile</declname>
        </param>
        <param>
          <type>double(*)(const double *, void *)</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Rate.cpp" line="499" column="11" bodyfile="src/Rate.cpp" bodystart="500" bodyend="518"/>
      </memberdef>
      <memberdef kind="function" id="classEffRate12_1aa21376834310e9bff9ceb64fd17e86bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool EffRate12&lt; 2, double(*)(const double *, void *)&gt;::sample</definition>
        <argsstring>(std::vector&lt; double &gt; parameters, int incoming_hard_pid, std::vector&lt; fourvec &gt; &amp;final_states, std::vector&lt; int &gt; &amp;pids)</argsstring>
        <name>sample</name>
        <reimplements refid="classStochasticBase_1a8f4f2a4dc9dae1bfa2005817d1689ae1">sample</reimplements>
        <param>
          <type>std::vector&lt; double &gt;</type>
          <declname>parameters</declname>
        </param>
        <param>
          <type>int</type>
          <declname>incoming_hard_pid</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="structfourvec" kindref="compound">fourvec</ref> &gt; &amp;</type>
          <declname>final_states</declname>
        </param>
        <param>
          <type>std::vector&lt; int &gt; &amp;</type>
          <declname>pids</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Rate.cpp" line="522" column="16" bodyfile="src/Rate.cpp" bodystart="523" bodyend="575"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>EffRate12&lt; N, F &gt;</label>
        <link refid="classEffRate12"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>StochasticBase&lt; N &gt;</label>
        <link refid="classStochasticBase"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>EffRate12&lt; N, F &gt;</label>
        <link refid="classEffRate12"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>StochasticBase&lt; N &gt;</label>
        <link refid="classStochasticBase"/>
      </node>
    </collaborationgraph>
    <location file="src/Rate.h" line="52" column="47" bodyfile="src/Rate.h" bodystart="52" bodyend="74"/>
    <listofallmembers>
      <member refid="classEffRate12_1a3feed9c9ea489b5cddc966fb423891b3" prot="private" virt="non-virtual"><scope>EffRate12</scope><name>_active</name></member>
      <member refid="classEffRate12_1ac85150f49cb2c560dc3ac98c0335d92f" prot="private" virt="non-virtual"><scope>EffRate12</scope><name>_degen</name></member>
      <member refid="classEffRate12_1a875ee83db61bf23f9da7a17e1200e498" prot="private" virt="non-virtual"><scope>EffRate12</scope><name>_f</name></member>
      <member refid="classStochasticBase_1aeb83dd83a3af95bfdf18e5421984b7f6" prot="protected" virt="non-virtual"><scope>EffRate12</scope><name>_FirstMoment</name></member>
      <member refid="classEffRate12_1a38d3c665bece3ba8fd5cc3624b500092" prot="private" virt="non-virtual"><scope>EffRate12</scope><name>_FS_masses</name></member>
      <member refid="classEffRate12_1a4bbd42b35d2e9ae99ffd54528c7f8e02" prot="private" virt="non-virtual"><scope>EffRate12</scope><name>_FS_types</name></member>
      <member refid="classStochasticBase_1aace1be4a4710fe0af781160dc2d03486" prot="protected" virt="non-virtual"><scope>EffRate12</scope><name>_FunctionMax</name></member>
      <member refid="classEffRate12_1a3eecba5dc6cfd14f9f5edd129c5189be" prot="private" virt="non-virtual"><scope>EffRate12</scope><name>_IS_masses</name></member>
      <member refid="classEffRate12_1ae61b9143012a01cfbe8c6af9a5630d59" prot="private" virt="non-virtual"><scope>EffRate12</scope><name>_IS_types</name></member>
      <member refid="classStochasticBase_1ad32e80e36782553ebdebaac0009b5d25" prot="protected" virt="non-virtual"><scope>EffRate12</scope><name>_Name</name></member>
      <member refid="classEffRate12_1aee7203e8194e951ac8293b35d4b40097" prot="private" virt="non-virtual"><scope>EffRate12</scope><name>_process_id</name></member>
      <member refid="classStochasticBase_1ade3490e8ea1ba0a394dc92cd30a97139" prot="protected" virt="non-virtual"><scope>EffRate12</scope><name>_SecondMoment</name></member>
      <member refid="classStochasticBase_1acb5872b24fed45947c3959954e97f949" prot="protected" virt="non-virtual"><scope>EffRate12</scope><name>_with_moments</name></member>
      <member refid="classStochasticBase_1a795a4c09a598b9806658fbe3f9bdf057" prot="protected" virt="non-virtual"><scope>EffRate12</scope><name>_ZeroMoment</name></member>
      <member refid="classEffRate12_1a033e070bb1076d555c227f6a9c97a395" prot="private" virt="virtual"><scope>EffRate12</scope><name>calculate_fourvec</name></member>
      <member refid="classEffRate12_1acb06ea529f95810ab76b52aece0bd6ac" prot="private" virt="virtual"><scope>EffRate12</scope><name>calculate_scalar</name></member>
      <member refid="classEffRate12_1a31ca444f9b5df895228c95d0396b1e81" prot="private" virt="virtual"><scope>EffRate12</scope><name>calculate_scalar</name></member>
      <member refid="classEffRate12_1a80ca2eff05b0408e8cf74c2e047816ea" prot="private" virt="virtual"><scope>EffRate12</scope><name>calculate_tensor</name></member>
      <member refid="classStochasticBase_1acd9c32d076fffee21a9b7f4758e62e2f" prot="protected" virt="non-virtual"><scope>EffRate12</scope><name>compute</name></member>
      <member refid="classEffRate12_1a23a99ae0f76daa844306bd79694b1a01" prot="public" virt="non-virtual"><scope>EffRate12</scope><name>EffRate12</name></member>
      <member refid="classEffRate12_1ad449687ff44df4843297720e66829c01" prot="public" virt="non-virtual"><scope>EffRate12</scope><name>EffRate12</name></member>
      <member refid="classEffRate12_1a2a8fcdc55208e1f3222863c8b6a4f0b9" prot="private" virt="virtual"><scope>EffRate12</scope><name>find_max</name></member>
      <member refid="classEffRate12_1a4d0a8bb0d3c0cda5c690eb3638fc3b4c" prot="private" virt="virtual"><scope>EffRate12</scope><name>find_max</name></member>
      <member refid="classStochasticBase_1a18466f8d4eb0404b3cd8b464e935c01b" prot="public" virt="non-virtual"><scope>EffRate12</scope><name>GetFirstM</name></member>
      <member refid="classStochasticBase_1a222c9f3b0c5cac430374a9131a673743" prot="public" virt="non-virtual"><scope>EffRate12</scope><name>GetFmax</name></member>
      <member refid="classStochasticBase_1ab797b4a6ff32dd8621b784fadac7cfe8" prot="public" virt="non-virtual"><scope>EffRate12</scope><name>GetSecondM</name></member>
      <member refid="classStochasticBase_1af6d52c8b415f0e517e35977fb1022c4f" prot="public" virt="non-virtual"><scope>EffRate12</scope><name>GetZeroM</name></member>
      <member refid="classStochasticBase_1a782a931130b6f52e9ee4bf16a9fb93e8" prot="public" virt="non-virtual"><scope>EffRate12</scope><name>init</name></member>
      <member refid="classEffRate12_1a7fd87f4fe81aa8ab98031f36428d4b80" prot="public" virt="non-virtual"><scope>EffRate12</scope><name>IsActive</name></member>
      <member refid="classStochasticBase_1adc7feeb5eb1134663d180c1e4a2e812a" prot="public" virt="non-virtual"><scope>EffRate12</scope><name>load</name></member>
      <member refid="classEffRate12_1a78d439dfda37ef7f89917ac8902f81d1" prot="public" virt="non-virtual"><scope>EffRate12</scope><name>process_id</name></member>
      <member refid="classEffRate12_1a3c26ba0fe3451827682279708e7b37d3" prot="public" virt="virtual"><scope>EffRate12</scope><name>sample</name></member>
      <member refid="classEffRate12_1aa21376834310e9bff9ceb64fd17e86bc" prot="public" virt="virtual"><scope>EffRate12</scope><name>sample</name></member>
      <member refid="classStochasticBase_1a8ca5df813830aa7b8a61df5d94c8a1c6" prot="public" virt="non-virtual"><scope>EffRate12</scope><name>StochasticBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
