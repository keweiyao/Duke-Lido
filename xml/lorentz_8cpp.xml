<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="lorentz_8cpp" kind="file" language="C++">
    <compoundname>lorentz.cpp</compoundname>
    <includes refid="lorentz_8h" local="yes">lorentz.h</includes>
    <incdepgraph>
      <node id="3">
        <label>cmath</label>
      </node>
      <node id="2">
        <label>lorentz.h</label>
        <link refid="lorentz_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/lorentz.cpp</label>
        <link refid="lorentz_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>cstdlib</label>
      </node>
      <node id="5">
        <label>iostream</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="lorentz_8cpp_1adba324410ab4c4d0bdf54b90fc7ae141" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structfourvec" kindref="compound">fourvec</ref></type>
        <definition>fourvec measure_perp</definition>
        <argsstring>(fourvec p, fourvec k)</argsstring>
        <name>measure_perp</name>
        <param>
          <type><ref refid="structfourvec" kindref="compound">fourvec</ref></type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="structfourvec" kindref="compound">fourvec</ref></type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lorentz.cpp" line="2" column="9" bodyfile="src/lorentz.cpp" bodystart="2" bodyend="5"/>
      </memberdef>
      <memberdef kind="function" id="lorentz_8cpp_1a06238a0e25b4c8f7f572d79e3e1bd6b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double dot</definition>
        <argsstring>(const fourvec &amp;A, const fourvec &amp;B)</argsstring>
        <name>dot</name>
        <param>
          <type>const <ref refid="structfourvec" kindref="compound">fourvec</ref> &amp;</type>
          <declname>A</declname>
        </param>
        <param>
          <type>const <ref refid="structfourvec" kindref="compound">fourvec</ref> &amp;</type>
          <declname>B</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lorentz.cpp" line="7" column="8" bodyfile="src/lorentz.cpp" bodystart="7" bodyend="9"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;lorentz.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"><ref refid="structfourvec" kindref="compound">fourvec</ref><sp/>measure_perp(<ref refid="structfourvec" kindref="compound">fourvec</ref><sp/>p,<sp/><ref refid="structfourvec" kindref="compound">fourvec</ref><sp/>k){</highlight></codeline>
<codeline lineno="3"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>kdotp<sp/>=<sp/>(k.x()*p.x()<sp/>+<sp/>k.y()*p.y()<sp/>+<sp/>k.z()*p.z());</highlight></codeline>
<codeline lineno="4"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>k<sp/>-<sp/>p*(kdotp/p.pabs2());<sp/></highlight><highlight class="comment">//<sp/>k_perp<sp/><sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dot(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structfourvec" kindref="compound">fourvec</ref>&amp;<sp/>A,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structfourvec" kindref="compound">fourvec</ref>&amp;<sp/>B)<sp/>{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>A.t()*B.t()<sp/>-<sp/>A.x()*B.x()<sp/>-<sp/>A.y()*B.y()<sp/>-<sp/>A.z()*B.z();</highlight></codeline>
<codeline lineno="9"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/lorentz.cpp"/>
  </compounddef>
</doxygen>
