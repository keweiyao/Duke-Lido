<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classcubeture__nd" kind="class" language="C++" prot="public">
    <compoundname>cubeture_nd</compoundname>
    <templateparamlist>
      <param>
        <type>typename F</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classcubeture__nd_1a1605bc4dc33a24aa801290364c5fa300" prot="private" static="no" mutable="no">
        <type>F</type>
        <definition>F cubeture_nd&lt; F &gt;::f</definition>
        <argsstring></argsstring>
        <name>f</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/integrator.h" line="135" column="5" bodyfile="src/integrator.h" bodystart="135" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcubeture__nd_1a417bf02a677f5c9b54cdc4ad585b07a2" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int cubeture_nd&lt; F &gt;::limit</definition>
        <argsstring></argsstring>
        <name>limit</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/integrator.h" line="136" column="7" bodyfile="src/integrator.h" bodystart="136" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classcubeture__nd_1a2047292868cfff46f1073d3192f94c62" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int cubeture_nd&lt; F &gt;::cubeture_wrapper</definition>
        <argsstring>(unsigned ndimx, const double *x, void *fdata, unsigned fdim, double *fval)</argsstring>
        <name>cubeture_wrapper</name>
        <param>
          <type>unsigned</type>
          <declname>ndimx</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>fdata</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>fdim</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>fval</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/integrator.h" line="137" column="14" bodyfile="src/integrator.h" bodystart="137" bodyend="143"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classcubeture__nd_1acb641fa3374729db07302eaf5f2576be" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>cubeture_nd&lt; F &gt;::cubeture_nd</definition>
        <argsstring>(F f, int limit)</argsstring>
        <name>cubeture_nd</name>
        <param>
          <type>F</type>
          <declname>f</declname>
        </param>
        <param>
          <type>int</type>
          <declname>limit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/integrator.h" line="146" column="3" bodyfile="src/integrator.h" bodystart="146" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="classcubeture__nd_1a0c5ac19a1900cc2070ef617a95dd1a55" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt;double&gt; cubeture_nd&lt; F &gt;::integrate</definition>
        <argsstring>(unsigned ndimx, unsigned ndimf, const double *min, const double *max, double epsabs, double epsrel, double &amp;error)</argsstring>
        <name>integrate</name>
        <param>
          <type>unsigned</type>
          <declname>ndimx</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>ndimf</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>min</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>max</declname>
        </param>
        <param>
          <type>double</type>
          <declname>epsabs</declname>
        </param>
        <param>
          <type>double</type>
          <declname>epsrel</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>error</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/integrator.h" line="149" column="15" bodyfile="src/integrator.h" bodystart="149" bodyend="175"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/integrator.h" line="134" column="18" bodyfile="src/integrator.h" bodystart="134" bodyend="176"/>
    <listofallmembers>
      <member refid="classcubeture__nd_1acb641fa3374729db07302eaf5f2576be" prot="public" virt="non-virtual"><scope>cubeture_nd</scope><name>cubeture_nd</name></member>
      <member refid="classcubeture__nd_1a2047292868cfff46f1073d3192f94c62" prot="private" virt="non-virtual"><scope>cubeture_nd</scope><name>cubeture_wrapper</name></member>
      <member refid="classcubeture__nd_1a1605bc4dc33a24aa801290364c5fa300" prot="private" virt="non-virtual"><scope>cubeture_nd</scope><name>f</name></member>
      <member refid="classcubeture__nd_1a0c5ac19a1900cc2070ef617a95dd1a55" prot="public" virt="non-virtual"><scope>cubeture_nd</scope><name>integrate</name></member>
      <member refid="classcubeture__nd_1a417bf02a677f5c9b54cdc4ad585b07a2" prot="private" virt="non-virtual"><scope>cubeture_nd</scope><name>limit</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
