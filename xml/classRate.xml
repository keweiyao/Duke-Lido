<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classRate" kind="class" language="C++" prot="public">
    <compoundname>Rate</compoundname>
    <basecompoundref refid="classStochasticBase" prot="public" virt="virtual">StochasticBase&lt; N1 &gt;</basecompoundref>
    <templateparamlist>
      <param>
        <type>char const *</type>
        <declname>str</declname>
        <defname>str</defname>
      </param>
      <param>
        <type>size_t</type>
        <declname>N1</declname>
        <defname>N1</defname>
      </param>
      <param>
        <type>size_t</type>
        <declname>N2</declname>
        <defname>N2</defname>
      </param>
      <param>
        <type>typename F</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classRate_1ad294feeb6a3c3537c335f4a08daf4361" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classXsection" kindref="compound">Xsection</ref>&lt; str, N2, F &gt; &gt;</type>
        <definition>std::shared_ptr&lt;Xsection&lt;str, N2, F&gt; &gt; Rate&lt; str, N1, N2, F &gt;::X</definition>
        <argsstring></argsstring>
        <name>X</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Rate.h" line="21" column="17" bodyfile="src/Rate.h" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classRate_1a217cac113cb8405fcbcd50984af2c86e" prot="private" static="no" mutable="no">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt;double&gt; Rate&lt; str, N1, N2, F &gt;::_IS_masses</definition>
        <argsstring></argsstring>
        <name>_IS_masses</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Rate.h" line="26" column="13" bodyfile="src/Rate.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classRate_1a69e72511b3f32dcd88a02eef05b58e03" prot="private" static="no" mutable="no">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt;double&gt; Rate&lt; str, N1, N2, F &gt;::_FS_masses</definition>
        <argsstring></argsstring>
        <name>_FS_masses</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Rate.h" line="27" column="13" bodyfile="src/Rate.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classRate_1a1b123fbda40ab091ac27429059bfac5f" prot="private" static="no" mutable="no">
        <type>std::vector&lt; int &gt;</type>
        <definition>std::vector&lt;int&gt; Rate&lt; str, N1, N2, F &gt;::_IS_types</definition>
        <argsstring></argsstring>
        <name>_IS_types</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Rate.h" line="28" column="13" bodyfile="src/Rate.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classRate_1a42378df970c82499105f9f9cf8975412" prot="private" static="no" mutable="no">
        <type>std::vector&lt; int &gt;</type>
        <definition>std::vector&lt;int&gt; Rate&lt; str, N1, N2, F &gt;::_FS_types</definition>
        <argsstring></argsstring>
        <name>_FS_types</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Rate.h" line="29" column="13" bodyfile="src/Rate.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classRate_1ad374723e8faef6f967dbe16c19510604" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Rate&lt; str, N1, N2, F &gt;::_process_id</definition>
        <argsstring></argsstring>
        <name>_process_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Rate.h" line="30" column="13" bodyfile="src/Rate.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classRate_1a9f30bb3a6fe41444be0cee18b09d8669" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Rate&lt; str, N1, N2, F &gt;::_degen</definition>
        <argsstring></argsstring>
        <name>_degen</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Rate.h" line="31" column="8" bodyfile="src/Rate.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classRate_1a730e4e1b1444489bf6017eeda26d6a5a" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Rate&lt; str, N1, N2, F &gt;::_active</definition>
        <argsstring></argsstring>
        <name>_active</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Rate.h" line="32" column="6" bodyfile="src/Rate.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classRate_1a0041d7eed111c99df5b9d6588abcc4ca" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="structscalar" kindref="compound">scalar</ref></type>
        <definition>scalar Rate&lt; str, N1, N2, F &gt;::find_max</definition>
        <argsstring>(std::vector&lt; double &gt; parameters)</argsstring>
        <name>find_max</name>
        <reimplements refid="classStochasticBase_1afe214be3b5b4563948b852bde4a72863">find_max</reimplements>
        <param>
          <type>std::vector&lt; double &gt;</type>
          <declname>parameters</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Rate.h" line="22" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classRate_1a3f83b15782507e4ded760df415432202" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="structscalar" kindref="compound">scalar</ref></type>
        <definition>scalar Rate&lt; str, N1, N2, F &gt;::calculate_scalar</definition>
        <argsstring>(std::vector&lt; double &gt; parameters)</argsstring>
        <name>calculate_scalar</name>
        <reimplements refid="classStochasticBase_1ac1cebc3571cab064a218f273624724b4">calculate_scalar</reimplements>
        <param>
          <type>std::vector&lt; double &gt;</type>
          <declname>parameters</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Rate.h" line="23" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classRate_1a14a05fbfffcf719f2b15518d5da90345" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="structfourvec" kindref="compound">fourvec</ref></type>
        <definition>fourvec Rate&lt; str, N1, N2, F &gt;::calculate_fourvec</definition>
        <argsstring>(std::vector&lt; double &gt; parameters)</argsstring>
        <name>calculate_fourvec</name>
        <reimplements refid="classStochasticBase_1a0080ac8ebcb02d9dcf8e935c30a14e18">calculate_fourvec</reimplements>
        <param>
          <type>std::vector&lt; double &gt;</type>
          <declname>parameters</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Rate.h" line="24" column="9" bodyfile="src/Rate.cpp" bodystart="377" bodyend="379"/>
      </memberdef>
      <memberdef kind="function" id="classRate_1ac9667a3a74707b704661b2b8d4c2fe29" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="structtensor" kindref="compound">tensor</ref></type>
        <definition>tensor Rate&lt; str, N1, N2, F &gt;::calculate_tensor</definition>
        <argsstring>(std::vector&lt; double &gt; parameters)</argsstring>
        <name>calculate_tensor</name>
        <reimplements refid="classStochasticBase_1a92d87bca06334a818ab9130866e348a4">calculate_tensor</reimplements>
        <param>
          <type>std::vector&lt; double &gt;</type>
          <declname>parameters</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Rate.h" line="25" column="8" bodyfile="src/Rate.cpp" bodystart="436" bodyend="438"/>
      </memberdef>
      <memberdef kind="function" id="classRate_1ab7eb860212eb4beef28f67a1c8bc41e0" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="structscalar" kindref="compound">scalar</ref></type>
        <definition>scalar Rate&lt; HS2PP, 2, 2, double(*)(const double, void *)&gt;::find_max</definition>
        <argsstring>(std::vector&lt; double &gt; parameters)</argsstring>
        <name>find_max</name>
        <reimplements refid="classStochasticBase_1afe214be3b5b4563948b852bde4a72863">find_max</reimplements>
        <param>
          <type>std::vector&lt; double &gt;</type>
          <declname>parameters</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Rate.cpp" line="226" column="13" bodyfile="src/Rate.cpp" bodystart="227" bodyend="256"/>
      </memberdef>
      <memberdef kind="function" id="classRate_1a02a8410e916ad5463c216d37bf7409f1" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="structscalar" kindref="compound">scalar</ref></type>
        <definition>scalar Rate&lt; HS2PPP, 2, 2, double(*)(const double *, void *)&gt;::find_max</definition>
        <argsstring>(std::vector&lt; double &gt; parameters)</argsstring>
        <name>find_max</name>
        <reimplements refid="classStochasticBase_1afe214be3b5b4563948b852bde4a72863">find_max</reimplements>
        <param>
          <type>std::vector&lt; double &gt;</type>
          <declname>parameters</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Rate.cpp" line="261" column="13" bodyfile="src/Rate.cpp" bodystart="262" bodyend="290"/>
      </memberdef>
      <memberdef kind="function" id="classRate_1aeb006841d686b7c4fc68bcdc7beaa3af" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="structscalar" kindref="compound">scalar</ref></type>
        <definition>scalar Rate&lt; HS2PP, 2, 2, double(*)(const double, void *)&gt;::calculate_scalar</definition>
        <argsstring>(std::vector&lt; double &gt; parameters)</argsstring>
        <name>calculate_scalar</name>
        <reimplements refid="classStochasticBase_1ac1cebc3571cab064a218f273624724b4">calculate_scalar</reimplements>
        <param>
          <type>std::vector&lt; double &gt;</type>
          <declname>parameters</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Rate.cpp" line="297" column="13" bodyfile="src/Rate.cpp" bodystart="298" bodyend="331"/>
      </memberdef>
      <memberdef kind="function" id="classRate_1a12a77aeef2498894cd68c0f7fca3c973" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="structscalar" kindref="compound">scalar</ref></type>
        <definition>scalar Rate&lt; HS2PPP, 2, 2, double(*)(const double *, void *)&gt;::calculate_scalar</definition>
        <argsstring>(std::vector&lt; double &gt; parameters)</argsstring>
        <name>calculate_scalar</name>
        <reimplements refid="classStochasticBase_1ac1cebc3571cab064a218f273624724b4">calculate_scalar</reimplements>
        <param>
          <type>std::vector&lt; double &gt;</type>
          <declname>parameters</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Rate.cpp" line="335" column="13" bodyfile="src/Rate.cpp" bodystart="336" bodyend="370"/>
      </memberdef>
      <memberdef kind="function" id="classRate_1a4551af56911d43fc30cf3da9675d5e01" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="structfourvec" kindref="compound">fourvec</ref></type>
        <definition>fourvec Rate&lt; HS2PP, 2, 2, double(*)(const double, void *)&gt;::calculate_fourvec</definition>
        <argsstring>(std::vector&lt; double &gt; parameters)</argsstring>
        <name>calculate_fourvec</name>
        <reimplements refid="classStochasticBase_1a0080ac8ebcb02d9dcf8e935c30a14e18">calculate_fourvec</reimplements>
        <param>
          <type>std::vector&lt; double &gt;</type>
          <declname>parameters</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Rate.cpp" line="382" column="14" bodyfile="src/Rate.cpp" bodystart="383" bodyend="429"/>
      </memberdef>
      <memberdef kind="function" id="classRate_1a915c9e3cfb87789db8ad6b2c10faac8b" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="structtensor" kindref="compound">tensor</ref></type>
        <definition>tensor Rate&lt; HS2PP, 2, 2, double(*)(const double, void *)&gt;::calculate_tensor</definition>
        <argsstring>(std::vector&lt; double &gt; parameters)</argsstring>
        <name>calculate_tensor</name>
        <reimplements refid="classStochasticBase_1a92d87bca06334a818ab9130866e348a4">calculate_tensor</reimplements>
        <param>
          <type>std::vector&lt; double &gt;</type>
          <declname>parameters</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Rate.cpp" line="441" column="13" bodyfile="src/Rate.cpp" bodystart="442" bodyend="494"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classRate_1a54987ef646e12f7e9f0978853bd01645" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Rate&lt; str, N1, N2, F &gt;::Rate</definition>
        <argsstring>(std::string Name, std::string configfile, F f)</argsstring>
        <name>Rate</name>
        <param>
          <type>std::string</type>
          <declname>Name</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>configfile</declname>
        </param>
        <param>
          <type>F</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Rate.h" line="34" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classRate_1a25152267c70f1b5bf221da27f7eb3c1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool Rate&lt; str, N1, N2, F &gt;::sample</definition>
        <argsstring>(std::vector&lt; double &gt; arg, int incoming_hard_pid, std::vector&lt; fourvec &gt; &amp;FS, std::vector&lt; int &gt; &amp;pids)</argsstring>
        <name>sample</name>
        <reimplements refid="classStochasticBase_1a8f4f2a4dc9dae1bfa2005817d1689ae1">sample</reimplements>
        <param>
          <type>std::vector&lt; double &gt;</type>
          <declname>arg</declname>
        </param>
        <param>
          <type>int</type>
          <declname>incoming_hard_pid</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="structfourvec" kindref="compound">fourvec</ref> &gt; &amp;</type>
          <declname>FS</declname>
        </param>
        <param>
          <type>std::vector&lt; int &gt; &amp;</type>
          <declname>pids</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Rate.h" line="35" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classRate_1a88904f31f75ceee0869ae646da57cd21" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Rate&lt; str, N1, N2, F &gt;::initX</definition>
        <argsstring>(std::string fname)</argsstring>
        <name>initX</name>
        <param>
          <type>std::string</type>
          <declname>fname</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Rate.h" line="39" column="6" bodyfile="src/Rate.h" bodystart="39" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="classRate_1ab0cd8a1c58f9d53c0d974b8a9f4c2e25" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Rate&lt; str, N1, N2, F &gt;::loadX</definition>
        <argsstring>(std::string fname)</argsstring>
        <name>loadX</name>
        <param>
          <type>std::string</type>
          <declname>fname</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Rate.h" line="40" column="6" bodyfile="src/Rate.h" bodystart="40" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="classRate_1a14ce8c26fe946a84555529ef65c17bd7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Rate&lt; str, N1, N2, F &gt;::IsActive</definition>
        <argsstring>(void)</argsstring>
        <name>IsActive</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Rate.h" line="41" column="6" bodyfile="src/Rate.h" bodystart="41" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="classRate_1a576f8b5510a9c24fb403d7268881c20b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Rate&lt; str, N1, N2, F &gt;::process_id</definition>
        <argsstring>(void)</argsstring>
        <name>process_id</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Rate.h" line="42" column="13" bodyfile="src/Rate.h" bodystart="42" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="classRate_1a55fd679d0a520ed21ca0c25922dc184e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* Rate&lt; str, N1, N2, F &gt;::which_implementation</definition>
        <argsstring>() const</argsstring>
        <name>which_implementation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Rate.h" line="43" column="13" bodyfile="src/Rate.h" bodystart="43" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="classRate_1a5c00e0b04d3616331eab63ce8aeef3fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Rate&lt; HS2PP, 2, 2, double(*)(const double, void *)&gt;::Rate</definition>
        <argsstring>(std::string Name, std::string configfile, double(*f)(const double, void *))</argsstring>
        <name>Rate</name>
        <param>
          <type>std::string</type>
          <declname>Name</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>configfile</declname>
        </param>
        <param>
          <type>double(*)(const double, void *)</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Rate.cpp" line="12" column="6" bodyfile="src/Rate.cpp" bodystart="13" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="classRate_1abd48776ac2378076a6d355e9354bba78" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Rate&lt; HS2PPP, 2, 2, double(*)(const double *, void *)&gt;::Rate</definition>
        <argsstring>(std::string Name, std::string configfile, double(*f)(const double *, void *))</argsstring>
        <name>Rate</name>
        <param>
          <type>std::string</type>
          <declname>Name</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>configfile</declname>
        </param>
        <param>
          <type>double(*)(const double *, void *)</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Rate.cpp" line="36" column="6" bodyfile="src/Rate.cpp" bodystart="37" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="classRate_1a50743f15d1a3a53f06aa08c03861db4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool Rate&lt; HS2PP, 2, 2, double(*)(const double, void *)&gt;::sample</definition>
        <argsstring>(std::vector&lt; double &gt; parameters, int incoming_hard_pid, std::vector&lt; fourvec &gt; &amp;final_states, std::vector&lt; int &gt; &amp;pids)</argsstring>
        <name>sample</name>
        <reimplements refid="classStochasticBase_1a8f4f2a4dc9dae1bfa2005817d1689ae1">sample</reimplements>
        <param>
          <type>std::vector&lt; double &gt;</type>
          <declname>parameters</declname>
        </param>
        <param>
          <type>int</type>
          <declname>incoming_hard_pid</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="structfourvec" kindref="compound">fourvec</ref> &gt; &amp;</type>
          <declname>final_states</declname>
        </param>
        <param>
          <type>std::vector&lt; int &gt; &amp;</type>
          <declname>pids</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Rate.cpp" line="63" column="11" bodyfile="src/Rate.cpp" bodystart="64" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="classRate_1a09f352d7608e2ac0017e2f4a43e9efd0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool Rate&lt; HS2PPP, 2, 2, double(*)(const double *, void *)&gt;::sample</definition>
        <argsstring>(std::vector&lt; double &gt; parameters, int incoming_hard_pid, std::vector&lt; fourvec &gt; &amp;final_states, std::vector&lt; int &gt; &amp;pids)</argsstring>
        <name>sample</name>
        <reimplements refid="classStochasticBase_1a8f4f2a4dc9dae1bfa2005817d1689ae1">sample</reimplements>
        <param>
          <type>std::vector&lt; double &gt;</type>
          <declname>parameters</declname>
        </param>
        <param>
          <type>int</type>
          <declname>incoming_hard_pid</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="structfourvec" kindref="compound">fourvec</ref> &gt; &amp;</type>
          <declname>final_states</declname>
        </param>
        <param>
          <type>std::vector&lt; int &gt; &amp;</type>
          <declname>pids</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Rate.cpp" line="145" column="11" bodyfile="src/Rate.cpp" bodystart="146" bodyend="219"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>Rate&lt; str, N1, N2, F &gt;</label>
        <link refid="classRate"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>StochasticBase&lt; N1 &gt;</label>
        <link refid="classStochasticBase"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>Rate&lt; str, N1, N2, F &gt;</label>
        <link refid="classRate"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>StochasticBase&lt; N1 &gt;</label>
        <link refid="classStochasticBase"/>
      </node>
    </collaborationgraph>
    <location file="src/Rate.h" line="19" column="42" bodyfile="src/Rate.h" bodystart="19" bodyend="44"/>
    <listofallmembers>
      <member refid="classRate_1a730e4e1b1444489bf6017eeda26d6a5a" prot="private" virt="non-virtual"><scope>Rate</scope><name>_active</name></member>
      <member refid="classRate_1a9f30bb3a6fe41444be0cee18b09d8669" prot="private" virt="non-virtual"><scope>Rate</scope><name>_degen</name></member>
      <member refid="classStochasticBase_1aeb83dd83a3af95bfdf18e5421984b7f6" prot="protected" virt="non-virtual"><scope>Rate</scope><name>_FirstMoment</name></member>
      <member refid="classRate_1a69e72511b3f32dcd88a02eef05b58e03" prot="private" virt="non-virtual"><scope>Rate</scope><name>_FS_masses</name></member>
      <member refid="classRate_1a42378df970c82499105f9f9cf8975412" prot="private" virt="non-virtual"><scope>Rate</scope><name>_FS_types</name></member>
      <member refid="classStochasticBase_1aace1be4a4710fe0af781160dc2d03486" prot="protected" virt="non-virtual"><scope>Rate</scope><name>_FunctionMax</name></member>
      <member refid="classRate_1a217cac113cb8405fcbcd50984af2c86e" prot="private" virt="non-virtual"><scope>Rate</scope><name>_IS_masses</name></member>
      <member refid="classRate_1a1b123fbda40ab091ac27429059bfac5f" prot="private" virt="non-virtual"><scope>Rate</scope><name>_IS_types</name></member>
      <member refid="classStochasticBase_1ad32e80e36782553ebdebaac0009b5d25" prot="protected" virt="non-virtual"><scope>Rate</scope><name>_Name</name></member>
      <member refid="classRate_1ad374723e8faef6f967dbe16c19510604" prot="private" virt="non-virtual"><scope>Rate</scope><name>_process_id</name></member>
      <member refid="classStochasticBase_1ade3490e8ea1ba0a394dc92cd30a97139" prot="protected" virt="non-virtual"><scope>Rate</scope><name>_SecondMoment</name></member>
      <member refid="classStochasticBase_1acb5872b24fed45947c3959954e97f949" prot="protected" virt="non-virtual"><scope>Rate</scope><name>_with_moments</name></member>
      <member refid="classStochasticBase_1a795a4c09a598b9806658fbe3f9bdf057" prot="protected" virt="non-virtual"><scope>Rate</scope><name>_ZeroMoment</name></member>
      <member refid="classRate_1a14a05fbfffcf719f2b15518d5da90345" prot="private" virt="virtual"><scope>Rate</scope><name>calculate_fourvec</name></member>
      <member refid="classRate_1a4551af56911d43fc30cf3da9675d5e01" prot="private" virt="virtual"><scope>Rate</scope><name>calculate_fourvec</name></member>
      <member refid="classRate_1a3f83b15782507e4ded760df415432202" prot="private" virt="virtual"><scope>Rate</scope><name>calculate_scalar</name></member>
      <member refid="classRate_1aeb006841d686b7c4fc68bcdc7beaa3af" prot="private" virt="virtual"><scope>Rate</scope><name>calculate_scalar</name></member>
      <member refid="classRate_1a12a77aeef2498894cd68c0f7fca3c973" prot="private" virt="virtual"><scope>Rate</scope><name>calculate_scalar</name></member>
      <member refid="classRate_1ac9667a3a74707b704661b2b8d4c2fe29" prot="private" virt="virtual"><scope>Rate</scope><name>calculate_tensor</name></member>
      <member refid="classRate_1a915c9e3cfb87789db8ad6b2c10faac8b" prot="private" virt="virtual"><scope>Rate</scope><name>calculate_tensor</name></member>
      <member refid="classStochasticBase_1acd9c32d076fffee21a9b7f4758e62e2f" prot="protected" virt="non-virtual"><scope>Rate</scope><name>compute</name></member>
      <member refid="classRate_1a0041d7eed111c99df5b9d6588abcc4ca" prot="private" virt="virtual"><scope>Rate</scope><name>find_max</name></member>
      <member refid="classRate_1ab7eb860212eb4beef28f67a1c8bc41e0" prot="private" virt="virtual"><scope>Rate</scope><name>find_max</name></member>
      <member refid="classRate_1a02a8410e916ad5463c216d37bf7409f1" prot="private" virt="virtual"><scope>Rate</scope><name>find_max</name></member>
      <member refid="classStochasticBase_1a18466f8d4eb0404b3cd8b464e935c01b" prot="public" virt="non-virtual"><scope>Rate</scope><name>GetFirstM</name></member>
      <member refid="classStochasticBase_1a222c9f3b0c5cac430374a9131a673743" prot="public" virt="non-virtual"><scope>Rate</scope><name>GetFmax</name></member>
      <member refid="classStochasticBase_1ab797b4a6ff32dd8621b784fadac7cfe8" prot="public" virt="non-virtual"><scope>Rate</scope><name>GetSecondM</name></member>
      <member refid="classStochasticBase_1af6d52c8b415f0e517e35977fb1022c4f" prot="public" virt="non-virtual"><scope>Rate</scope><name>GetZeroM</name></member>
      <member refid="classStochasticBase_1a782a931130b6f52e9ee4bf16a9fb93e8" prot="public" virt="non-virtual"><scope>Rate</scope><name>init</name></member>
      <member refid="classRate_1a88904f31f75ceee0869ae646da57cd21" prot="public" virt="non-virtual"><scope>Rate</scope><name>initX</name></member>
      <member refid="classRate_1a14ce8c26fe946a84555529ef65c17bd7" prot="public" virt="non-virtual"><scope>Rate</scope><name>IsActive</name></member>
      <member refid="classStochasticBase_1adc7feeb5eb1134663d180c1e4a2e812a" prot="public" virt="non-virtual"><scope>Rate</scope><name>load</name></member>
      <member refid="classRate_1ab0cd8a1c58f9d53c0d974b8a9f4c2e25" prot="public" virt="non-virtual"><scope>Rate</scope><name>loadX</name></member>
      <member refid="classRate_1a576f8b5510a9c24fb403d7268881c20b" prot="public" virt="non-virtual"><scope>Rate</scope><name>process_id</name></member>
      <member refid="classRate_1a54987ef646e12f7e9f0978853bd01645" prot="public" virt="non-virtual"><scope>Rate</scope><name>Rate</name></member>
      <member refid="classRate_1a5c00e0b04d3616331eab63ce8aeef3fb" prot="public" virt="non-virtual"><scope>Rate</scope><name>Rate</name></member>
      <member refid="classRate_1abd48776ac2378076a6d355e9354bba78" prot="public" virt="non-virtual"><scope>Rate</scope><name>Rate</name></member>
      <member refid="classRate_1a25152267c70f1b5bf221da27f7eb3c1c" prot="public" virt="virtual"><scope>Rate</scope><name>sample</name></member>
      <member refid="classRate_1a50743f15d1a3a53f06aa08c03861db4b" prot="public" virt="virtual"><scope>Rate</scope><name>sample</name></member>
      <member refid="classRate_1a09f352d7608e2ac0017e2f4a43e9efd0" prot="public" virt="virtual"><scope>Rate</scope><name>sample</name></member>
      <member refid="classStochasticBase_1a8ca5df813830aa7b8a61df5d94c8a1c6" prot="public" virt="non-virtual"><scope>Rate</scope><name>StochasticBase</name></member>
      <member refid="classRate_1a55fd679d0a520ed21ca0c25922dc184e" prot="public" virt="non-virtual"><scope>Rate</scope><name>which_implementation</name></member>
      <member refid="classRate_1ad294feeb6a3c3537c335f4a08daf4361" prot="private" virt="non-virtual"><scope>Rate</scope><name>X</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
