<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="collision__manager_8h" kind="file" language="C++">
    <compoundname>collision_manager.h</compoundname>
    <includes local="no">boost/variant/variant.hpp</includes>
    <includes refid="Rate_8h" local="yes">Rate.h</includes>
    <includes local="no">vector</includes>
    <includes local="no">map</includes>
    <includedby refid="collision__manager_8cpp" local="yes">src/collision_manager.cpp</includedby>
    <includedby refid="lido_8h" local="yes">src/lido.h</includedby>
    <incdepgraph>
      <node id="12">
        <label>boost/algorithm/string.hpp</label>
      </node>
      <node id="8">
        <label>boost/property_tree/xml_parser.hpp</label>
      </node>
      <node id="21">
        <label>iomanip</label>
      </node>
      <node id="19">
        <label>predefine.h</label>
        <link refid="predefine_8h_source"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>TableBase.h</label>
        <link refid="TableBase_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>StochasticBase.h</label>
        <link refid="StochasticBase_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>Rate.h</label>
        <link refid="Rate_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>boost/variant/variant.hpp</label>
      </node>
      <node id="17">
        <label>cmath</label>
      </node>
      <node id="6">
        <label>string</label>
      </node>
      <node id="16">
        <label>lorentz.h</label>
        <link refid="lorentz_8h_source"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>map</label>
      </node>
      <node id="23">
        <label>fstream</label>
      </node>
      <node id="7">
        <label>random</label>
      </node>
      <node id="5">
        <label>vector</label>
      </node>
      <node id="22">
        <label>sstream</label>
      </node>
      <node id="1">
        <label>src/collision_manager.h</label>
        <link refid="collision__manager_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>cstdlib</label>
      </node>
      <node id="9">
        <label>boost/property_tree/ptree.hpp</label>
      </node>
      <node id="15">
        <label>iostream</label>
      </node>
      <node id="14">
        <label>boost/multi_array.hpp</label>
      </node>
      <node id="20">
        <label>H5Cpp.h</label>
      </node>
      <node id="18">
        <label>Xsection.h</label>
        <link refid="Xsection_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>src/lido.h</label>
        <link refid="lido_8h_source"/>
      </node>
      <node id="1">
        <label>src/collision_manager.h</label>
        <link refid="collision__manager_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classcollision__manager" prot="public">collision_manager</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="collision__manager_8h_1ac64d7f65d518fd5d0e756982947242df" prot="public" static="no">
        <type><ref refid="classRate" kindref="compound">Rate</ref>&lt; HS2PP, 2, 2, double(*)(const double, void *)&gt;</type>
        <definition>typedef Rate&lt;HS2PP, 2, 2, double(*)(const double, void*)&gt; Rate22</definition>
        <argsstring></argsstring>
        <name>Rate22</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/collision_manager.h" line="9" column="14" bodyfile="src/collision_manager.h" bodystart="9" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="collision__manager_8h_1a1190f759c5dd134306d7174be9f66981" prot="public" static="no">
        <type><ref refid="classRate" kindref="compound">Rate</ref>&lt; HS2PPP, 2, 2, double(*)(const double *, void *)&gt;</type>
        <definition>typedef Rate&lt;HS2PPP, 2, 2, double(*)(const double*, void*)&gt; Rate23</definition>
        <argsstring></argsstring>
        <name>Rate23</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/collision_manager.h" line="10" column="14" bodyfile="src/collision_manager.h" bodystart="10" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="collision__manager_8h_1a17905225037080392ccdfe5dd165bdb2" prot="public" static="no">
        <type><ref refid="classEffRate12" kindref="compound">EffRate12</ref>&lt; 2, double(*)(const double *, void *)&gt;</type>
        <definition>typedef EffRate12&lt;2, double(*)(const double*, void*)&gt; Rate12</definition>
        <argsstring></argsstring>
        <name>Rate12</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/collision_manager.h" line="11" column="19" bodyfile="src/collision_manager.h" bodystart="11" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="collision__manager_8h_1ab47eff8d5e22e5c2ec4a8f52e49b3fba" prot="public" static="no">
        <type>boost::variant&lt; <ref refid="classRate" kindref="compound">Rate22</ref>, <ref refid="classRate" kindref="compound">Rate23</ref>, <ref refid="classEffRate12" kindref="compound">Rate12</ref> &gt;</type>
        <definition>typedef boost::variant&lt;Rate22, Rate23, Rate12&gt; Process</definition>
        <argsstring></argsstring>
        <name>Process</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/collision_manager.h" line="12" column="24" bodyfile="src/collision_manager.h" bodystart="12" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>Collision_Manager_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Collision_Manager_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/variant/variant.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Rate.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classRate" kindref="compound">Rate</ref>&lt;HS2PP,<sp/>2,<sp/>2,<sp/>double(*)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>double,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)&gt;<sp/><ref refid="classRate" kindref="compound">Rate22</ref>;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classRate" kindref="compound">Rate</ref>&lt;HS2PPP,<sp/>2,<sp/>2,<sp/>double(*)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)&gt;<sp/><ref refid="classRate" kindref="compound">Rate23</ref>;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classEffRate12" kindref="compound">EffRate12</ref>&lt;2,<sp/>double(*)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)&gt;<sp/><ref refid="classEffRate12" kindref="compound">Rate12</ref>;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>boost::variant&lt;Rate22,<sp/>Rate23,<sp/>Rate12&gt;<sp/>Process;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>for<sp/>1-&gt;2,<sp/>2-&gt;2<sp/>and<sp/>2-&gt;3<sp/>collisions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="classcollision__manager" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcollision__manager" kindref="compound">collision_manager</ref>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;int,<sp/>std::vector&lt;Process&gt;<sp/>&gt;<sp/>AllProcesses;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>init_process(Process<sp/>&amp;r,<sp/>std::string<sp/>mode,<sp/>std::string<sp/>table_path);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>get_effective_mfp_soft(</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Ecell,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idA,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idB,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idC,</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Temp</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>get_effective_mfp_hard(</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Ecell,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idA,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idB,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idC,</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Temp</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcollision__manager" kindref="compound">collision_manager</ref>(std::string<sp/>mode,<sp/>std::string<sp/>setting_path,</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>table_path,<sp/>std::vector&lt;double&gt;<sp/>parameters);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sample(<ref refid="structparticle" kindref="compound">particle</ref><sp/>&amp;<sp/>pIn,<sp/></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;particle&gt;<sp/>&amp;<sp/>pOut_list,</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Temp,<sp/></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/>v3cell,</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dt_lab);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>parameters<sp/>=<sp/>mu,<sp/>afix,<sp/>theta,<sp/>cut</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal">};</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="src/collision_manager.h"/>
  </compounddef>
</doxygen>
