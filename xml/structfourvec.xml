<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="structfourvec" kind="struct" language="C++" prot="public">
    <compoundname>fourvec</compoundname>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structfourvec_1ad65ea709c10863a49bdd4f5dc10469c2" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double fourvec::a[4]</definition>
        <argsstring>[4]</argsstring>
        <name>a</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lorentz.h" line="60" column="10" bodyfile="src/lorentz.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structfourvec_1ac52af2a7aca4015d7c524a367571f816" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structfourvec" kindref="compound">fourvec</ref></type>
        <definition>static fourvec fourvec::unity</definition>
        <argsstring>(void)</argsstring>
        <name>unity</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lorentz.h" line="57" column="16" bodyfile="src/lorentz.h" bodystart="57" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="structfourvec_1ac2f1ac6fe909c44e983d796eb0a3e3c7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>static size_t fourvec::size</definition>
        <argsstring>(void)</argsstring>
        <name>size</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lorentz.h" line="121" column="17" bodyfile="src/lorentz.h" bodystart="121" bodyend="121"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structfourvec_1ac0f8679db70e7c781385be85bcbca10e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double fourvec::t</definition>
        <argsstring>(void) const</argsstring>
        <name>t</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lorentz.h" line="61" column="10" bodyfile="src/lorentz.h" bodystart="61" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="structfourvec_1a623ce1347ca5ad7fcbf81a06d98ced16" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double fourvec::x</definition>
        <argsstring>(void) const</argsstring>
        <name>x</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lorentz.h" line="62" column="10" bodyfile="src/lorentz.h" bodystart="62" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="structfourvec_1a892893374fc242d029aa77a9802fd49b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double fourvec::y</definition>
        <argsstring>(void) const</argsstring>
        <name>y</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lorentz.h" line="63" column="10" bodyfile="src/lorentz.h" bodystart="63" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="structfourvec_1a4190a038f0ac8a6eae98b567c68fb218" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double fourvec::z</definition>
        <argsstring>(void) const</argsstring>
        <name>z</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lorentz.h" line="64" column="10" bodyfile="src/lorentz.h" bodystart="64" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="structfourvec_1a20bcf37edf3787f8dc9f76f2f2939e79" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="structfourvec" kindref="compound">fourvec</ref></type>
        <definition>fourvec fourvec::operator*</definition>
        <argsstring>(T s)</argsstring>
        <name>operator*</name>
        <param>
          <type>T</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lorentz.h" line="76" column="11" bodyfile="src/lorentz.h" bodystart="76" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="structfourvec_1a71944f4a2d0d8a1e0c3a4df88d6ab1d8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structfourvec" kindref="compound">fourvec</ref></type>
        <definition>fourvec fourvec::operator/</definition>
        <argsstring>(fourvec B)</argsstring>
        <name>operator/</name>
        <param>
          <type><ref refid="structfourvec" kindref="compound">fourvec</ref></type>
          <declname>B</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lorentz.h" line="79" column="11" bodyfile="src/lorentz.h" bodystart="79" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="structfourvec_1a9c90d9f3a662212657c9387ff2fe2f23" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structfourvec" kindref="compound">fourvec</ref></type>
        <definition>fourvec fourvec::operator*</definition>
        <argsstring>(fourvec B)</argsstring>
        <name>operator*</name>
        <param>
          <type><ref refid="structfourvec" kindref="compound">fourvec</ref></type>
          <declname>B</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lorentz.h" line="82" column="11" bodyfile="src/lorentz.h" bodystart="82" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="structfourvec_1a6109469502b206a747765c0ef182e1e4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structfourvec" kindref="compound">fourvec</ref></type>
        <definition>fourvec fourvec::boost_to</definition>
        <argsstring>(double vx, double vy, double vz) const</argsstring>
        <name>boost_to</name>
        <param>
          <type>double</type>
          <declname>vx</declname>
        </param>
        <param>
          <type>double</type>
          <declname>vy</declname>
        </param>
        <param>
          <type>double</type>
          <declname>vz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lorentz.h" line="85" column="11" bodyfile="src/lorentz.h" bodystart="85" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="structfourvec_1af1a4ef498464c2dcf75cb1a50f6bc0ed" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structfourvec" kindref="compound">fourvec</ref></type>
        <definition>fourvec fourvec::boost_back</definition>
        <argsstring>(double vx, double vy, double vz) const</argsstring>
        <name>boost_back</name>
        <param>
          <type>double</type>
          <declname>vx</declname>
        </param>
        <param>
          <type>double</type>
          <declname>vy</declname>
        </param>
        <param>
          <type>double</type>
          <declname>vz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lorentz.h" line="97" column="11" bodyfile="src/lorentz.h" bodystart="97" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="structfourvec_1a6213c64a62b4127f8c25fd95efb5034b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structfourvec" kindref="compound">fourvec</ref></type>
        <definition>fourvec fourvec::rotate_back</definition>
        <argsstring>(const fourvec p) const</argsstring>
        <name>rotate_back</name>
        <param>
          <type>const <ref refid="structfourvec" kindref="compound">fourvec</ref></type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lorentz.h" line="100" column="11" bodyfile="src/lorentz.h" bodystart="100" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="structfourvec_1a40c7a6c0d41f8efd1dad8b5e78c25e55" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structfourvec" kindref="compound">fourvec</ref></type>
        <definition>fourvec fourvec::rotate_around_pz</definition>
        <argsstring>(const double delta_phi) const</argsstring>
        <name>rotate_around_pz</name>
        <param>
          <type>const double</type>
          <declname>delta_phi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lorentz.h" line="114" column="11" bodyfile="src/lorentz.h" bodystart="114" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="structfourvec_1a856b530f837fd3933dff5e64859cac19" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void fourvec::set</definition>
        <argsstring>(int i, double value)</argsstring>
        <name>set</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lorentz.h" line="122" column="8" bodyfile="src/lorentz.h" bodystart="122" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="structfourvec_1abd1e147317a96e7ec27d1d93682c7a4f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double fourvec::get</definition>
        <argsstring>(int i)</argsstring>
        <name>get</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lorentz.h" line="123" column="10" bodyfile="src/lorentz.h" bodystart="123" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="structfourvec_1a77281eb12223b7107871516972ece183" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double fourvec::pabs2</definition>
        <argsstring>()</argsstring>
        <name>pabs2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lorentz.h" line="124" column="10" bodyfile="src/lorentz.h" bodystart="124" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="structfourvec_1a81bdab6f6fae6a17d574e92276a578da" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double fourvec::pabs</definition>
        <argsstring>()</argsstring>
        <name>pabs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lorentz.h" line="125" column="10" bodyfile="src/lorentz.h" bodystart="125" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="structfourvec_1add610855592888b16413064bbafbba6c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double fourvec::tau</definition>
        <argsstring>(void) const</argsstring>
        <name>tau</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lorentz.h" line="126" column="10" bodyfile="src/lorentz.h" bodystart="126" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="structfourvec_1a9ff00c42696997c6e629fe3843d764c0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double fourvec::rap</definition>
        <argsstring>(void) const</argsstring>
        <name>rap</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lorentz.h" line="127" column="10" bodyfile="src/lorentz.h" bodystart="127" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="structfourvec_1a8b44dfcfbf1bb73384c3a9e5ea5cc128" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double fourvec::pseudorap</definition>
        <argsstring>(void) const</argsstring>
        <name>pseudorap</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lorentz.h" line="128" column="10" bodyfile="src/lorentz.h" bodystart="128" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="structfourvec_1a10b7a46e9ba9c92026cabdcb571341fa" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double fourvec::m2</definition>
        <argsstring>(void) const</argsstring>
        <name>m2</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lorentz.h" line="130" column="10" bodyfile="src/lorentz.h" bodystart="130" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="structfourvec_1ab5ac14c3b09ae43f7b0605425fea3088" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double fourvec::phi</definition>
        <argsstring>(void) const</argsstring>
        <name>phi</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lorentz.h" line="131" column="10" bodyfile="src/lorentz.h" bodystart="131" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="structfourvec_1a484a11248d7788fda8deaf2853ff4985" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double fourvec::xT</definition>
        <argsstring>(void) const</argsstring>
        <name>xT</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lorentz.h" line="132" column="10" bodyfile="src/lorentz.h" bodystart="132" bodyend="132"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="structfourvec_1a0d55e59d7faae67a6d334749c9b75abf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, const fourvec &amp;A)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="structfourvec" kindref="compound">fourvec</ref> &amp;</type>
          <declname>A</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lorentz.h" line="65" column="10" bodyfile="src/lorentz.h" bodystart="65" bodyend="68"/>
      </memberdef>
      <memberdef kind="friend" id="structfourvec_1af4fc9363681e32c7af96356fcacb4d2e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend <ref refid="structfourvec" kindref="compound">fourvec</ref></type>
        <definition>fourvec operator+</definition>
        <argsstring>(const fourvec &amp;A, const fourvec &amp;B)</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="structfourvec" kindref="compound">fourvec</ref> &amp;</type>
          <declname>A</declname>
        </param>
        <param>
          <type>const <ref refid="structfourvec" kindref="compound">fourvec</ref> &amp;</type>
          <declname>B</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lorentz.h" line="69" column="18" bodyfile="src/lorentz.h" bodystart="69" bodyend="71"/>
      </memberdef>
      <memberdef kind="friend" id="structfourvec_1aaff323d3f42b3922a6de1882782eb020" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend <ref refid="structfourvec" kindref="compound">fourvec</ref></type>
        <definition>fourvec operator-</definition>
        <argsstring>(const fourvec &amp;A, const fourvec &amp;B)</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="structfourvec" kindref="compound">fourvec</ref> &amp;</type>
          <declname>A</declname>
        </param>
        <param>
          <type>const <ref refid="structfourvec" kindref="compound">fourvec</ref> &amp;</type>
          <declname>B</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lorentz.h" line="72" column="18" bodyfile="src/lorentz.h" bodystart="72" bodyend="74"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/lorentz.h" line="56" column="14" bodyfile="src/lorentz.h" bodystart="56" bodyend="133"/>
    <listofallmembers>
      <member refid="structfourvec_1ad65ea709c10863a49bdd4f5dc10469c2" prot="public" virt="non-virtual"><scope>fourvec</scope><name>a</name></member>
      <member refid="structfourvec_1af1a4ef498464c2dcf75cb1a50f6bc0ed" prot="public" virt="non-virtual"><scope>fourvec</scope><name>boost_back</name></member>
      <member refid="structfourvec_1a6109469502b206a747765c0ef182e1e4" prot="public" virt="non-virtual"><scope>fourvec</scope><name>boost_to</name></member>
      <member refid="structfourvec_1abd1e147317a96e7ec27d1d93682c7a4f" prot="public" virt="non-virtual"><scope>fourvec</scope><name>get</name></member>
      <member refid="structfourvec_1a10b7a46e9ba9c92026cabdcb571341fa" prot="public" virt="non-virtual"><scope>fourvec</scope><name>m2</name></member>
      <member refid="structfourvec_1a20bcf37edf3787f8dc9f76f2f2939e79" prot="public" virt="non-virtual"><scope>fourvec</scope><name>operator*</name></member>
      <member refid="structfourvec_1a9c90d9f3a662212657c9387ff2fe2f23" prot="public" virt="non-virtual"><scope>fourvec</scope><name>operator*</name></member>
      <member refid="structfourvec_1af4fc9363681e32c7af96356fcacb4d2e" prot="public" virt="non-virtual"><scope>fourvec</scope><name>operator+</name></member>
      <member refid="structfourvec_1aaff323d3f42b3922a6de1882782eb020" prot="public" virt="non-virtual"><scope>fourvec</scope><name>operator-</name></member>
      <member refid="structfourvec_1a71944f4a2d0d8a1e0c3a4df88d6ab1d8" prot="public" virt="non-virtual"><scope>fourvec</scope><name>operator/</name></member>
      <member refid="structfourvec_1a0d55e59d7faae67a6d334749c9b75abf" prot="public" virt="non-virtual"><scope>fourvec</scope><name>operator&lt;&lt;</name></member>
      <member refid="structfourvec_1a81bdab6f6fae6a17d574e92276a578da" prot="public" virt="non-virtual"><scope>fourvec</scope><name>pabs</name></member>
      <member refid="structfourvec_1a77281eb12223b7107871516972ece183" prot="public" virt="non-virtual"><scope>fourvec</scope><name>pabs2</name></member>
      <member refid="structfourvec_1ab5ac14c3b09ae43f7b0605425fea3088" prot="public" virt="non-virtual"><scope>fourvec</scope><name>phi</name></member>
      <member refid="structfourvec_1a8b44dfcfbf1bb73384c3a9e5ea5cc128" prot="public" virt="non-virtual"><scope>fourvec</scope><name>pseudorap</name></member>
      <member refid="structfourvec_1a9ff00c42696997c6e629fe3843d764c0" prot="public" virt="non-virtual"><scope>fourvec</scope><name>rap</name></member>
      <member refid="structfourvec_1a40c7a6c0d41f8efd1dad8b5e78c25e55" prot="public" virt="non-virtual"><scope>fourvec</scope><name>rotate_around_pz</name></member>
      <member refid="structfourvec_1a6213c64a62b4127f8c25fd95efb5034b" prot="public" virt="non-virtual"><scope>fourvec</scope><name>rotate_back</name></member>
      <member refid="structfourvec_1a856b530f837fd3933dff5e64859cac19" prot="public" virt="non-virtual"><scope>fourvec</scope><name>set</name></member>
      <member refid="structfourvec_1ac2f1ac6fe909c44e983d796eb0a3e3c7" prot="public" virt="non-virtual"><scope>fourvec</scope><name>size</name></member>
      <member refid="structfourvec_1ac0f8679db70e7c781385be85bcbca10e" prot="public" virt="non-virtual"><scope>fourvec</scope><name>t</name></member>
      <member refid="structfourvec_1add610855592888b16413064bbafbba6c" prot="public" virt="non-virtual"><scope>fourvec</scope><name>tau</name></member>
      <member refid="structfourvec_1ac52af2a7aca4015d7c524a367571f816" prot="public" virt="non-virtual"><scope>fourvec</scope><name>unity</name></member>
      <member refid="structfourvec_1a623ce1347ca5ad7fcbf81a06d98ced16" prot="public" virt="non-virtual"><scope>fourvec</scope><name>x</name></member>
      <member refid="structfourvec_1a484a11248d7788fda8deaf2853ff4985" prot="public" virt="non-virtual"><scope>fourvec</scope><name>xT</name></member>
      <member refid="structfourvec_1a892893374fc242d029aa77a9802fd49b" prot="public" virt="non-virtual"><scope>fourvec</scope><name>y</name></member>
      <member refid="structfourvec_1a4190a038f0ac8a6eae98b567c68fb218" prot="public" virt="non-virtual"><scope>fourvec</scope><name>z</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
